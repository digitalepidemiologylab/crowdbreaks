<%= simple_form_for [:manage, @local_batch_job] do |f| %>
  <%= f.error_notification %>

  <% edit_condition = params[:controller] == 'manage/local_batch_jobs' && params[:action] == 'edit' %>
  <% if edit_condition && @local_batch_job.auto == true %>
    <fieldset disabled>
  <% end %>
  <div class="form-group">
    <%= f.input :name, hint: 'Has to be unique, must only include small letters, numbers, and underscores' %>
  </div>
  <% if edit_condition && @local_batch_job.auto == true %>
    </fieldset>
  <% end %>

  <div class="form-group">
    <%= f.association :project, hint: 'Choose question sequence' %>
  </div>

  <div class="form-group">
    <div class="input field_with_hint">
      <div>
        <label>Give access to contributors</label>
      </div>
      <%= f.collection_check_boxes :user_ids, User.where.not(role: 'default'), :id, :user_email do |b| %>
        <% b.label(style: "margin-right: 10px") { b.check_box(style: "margin-right: 3px") + b.text}%>
      <% end %>
      <p class="help-block">Give access to users</p>
    </div>
  </div>

  <div class="form-group">
    <%= f.input :instructions, hint: 'Instructions to the worker (visible on top of the question sequence) in Markdown', input_html: {value: f.object.instructions.present? ? f.object.instructions : @local_batch_job.default_instructions, style: "font-family: monospace;", rows: 10} %>
  </div>

  <div class="form-group">
    <%= f.input 'Upload tweet IDs',
      hint: 'Please use a header-less CSV in which each row corresponds to a tweet ID. You can specify a second column for the text. In that case the text instead of the entire tweet will be shown to turkers.',
      label_html: {class: 'label-no-wrap'} do %>
      <div class="btn btn-secondary" onClick="document.getElementById('local-job-file').click();">
        <%= fa_icon 'upload', class: 'mr-2' %>
        <span>Choose file</span>
      </div>
    <% end %>
    <div class='hidden-file-upload'>
      <%= f.input :job_file, as: :file, input_html: {id: 'local-job-file', class: 'input-file'} %>
    </div>
    <%= f.error :job_file %>
    <% if @local_batch_job.local_tweets.count > 0 %>
      <div class="alert alert-danger">Note: Existing tasks and tweet IDs will be overwritten if file is provided.</div>
    <% end %>
  </div>

  <div class="form-group">
    <%= f.input :processing_mode,
      collection: LocalBatchJob.processing_modes,
      include_blank: false,
      selected: @local_batch_job.read_attribute_before_type_cast(:processing_mode),
      hint: "If in test mode, answers to questions (results) are not recorded."
    %>
  </div>

  <div class="form-group">
    <%= f.input 'Answer delay start', hint: "Delay until answer buttons become clickable in the beginning of the question sequence." do %>
      <div class="input-group">
        <%= f.input_field :delay_start,
          class: 'form-control border-right-0',
          value: f.object.delay_start
        %>
      <span class="input-group-text">ms</span>
      </div>
    <% end %>
    <%= f.error :delay_start %>
  </div>

  <div class="form-group">
    <%= f.input 'Answer delay subsequent questions', hint: "Delay until answer buttons become clickable for all subsequent questions after the first one." do %>
      <div class="input-group">
        <%= f.input_field :delay_next_question,
          class: 'form-control border-right-0',
          value: f.object.delay_next_question
        %>
      <span class="input-group-text">ms</span>
      </div>
    <% end %>
    <%= f.error :delay_next_question %>
  </div>

  <div class="form-group">
    <%= f.input :annotation_display_mode,
      collection: LocalBatchJob.annotation_display_modes,
      include_blank: false,
      selected: @local_batch_job.read_attribute_before_type_cast(:annotation_display_mode),
      hint: 'By default the question sequence ends with a "Final" screen. Use the skip_final option to jump directly to the next question sequence.'
    %>
  </div>


  <div class="form-group">
    <%= f.input :check_availability, as: :select, collection: LocalBatchJob.check_availabilities.keys.to_a, include_blank: false,
      hint: 'By default tweets will not be checked for availability. Change to "do check availability" otherwise' %>
  </div>

  <div class="form-group">
    <%= f.input :tweet_display_mode, as: :select, collection: LocalBatchJob.tweet_display_modes.keys.to_a, include_blank: false,
      hint: 'Tweet display mode (only relevant when showing embedded tweet). By default hides any cards (photos, videos, gifs, link previews etc.) and reply threads (conversations).' %>
  </div>

  <div class="form-actions" style="margin-top:25px;">
    <%= f.button :submit, class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>
