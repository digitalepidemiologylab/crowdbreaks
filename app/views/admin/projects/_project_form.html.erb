<%= simple_form_for(@project, url: @project.new_record? ? admin_projects_path : admin_project_path(@project), html: {id: 'project-form'}) do |f| %>
  <%= f.error_notification %>

  <div class="form-group">
    <%= f.error :base %>
  </div>

  <div class="mb-5">
    <h4>General</h4>
    <div class="form-group">
      <%= f.simple_fields_for :title_translations do |title| %>
        <% Crowdbreaks::Locales.each do |l| %>
          <%= title.input l.to_sym, label: 'Title '+l, input_html: {value: @project.new_record? ? 'Project Title' : @project.title_translations[l] || ''} %>
        <% end %>
      <% end %>
    </div>
    <div class="form-group">
      <%= f.simple_fields_for :description_translations do |desc| %>
        <% Crowdbreaks::Locales.each do |l| %>
          <%= desc.input l.to_sym, label: 'Description '+l, as: :text,
            input_html: {value: @project.new_record? ? 'Some description' : @project.description_translations[l] || '', rows: 6} %>
        <% end %>
      <% end %>
    </div>
    <div class="form-group">
      <%= f.input :name, input_html: { value: @project.name[8..-1] || "" }, hint: "Name of the project, without the 'project_' prefix (sic!). Use latin symbols, numbers and underscores." %>
    </div>
    <div class="form-group">
      <%= f.input :active_question_sequence_id, collection: @project.question_sequences, include_blank: false, selected: @project.active_question_sequence, hint: 'A project can have multiple question sequences. The active question sequence is the one which will be on public display.' %>
    </div>
  </div>

  <div class="mb-5">
    <h4>Twitter Streaming Options</h4>
    <%= simple_toggle_switch(@project.active_stream, 'Show streaming options', 'twitter-streaming-options-checkbox') %>
    <div id="twitter-streaming-options" data-active-stream=<%= @project.active_stream? %>>
      <div class="form-group">
        <%= f.input :keywords, hint: 'Comma-separated list of keywords for the Twitter streaming API to filter for' ,
          input_html: {value: @project.keywords&.join(', ') || ""} %>
        <%= f.input :lang, label: "Languages", hint: 'Languages of tweets to collect through Twitter API (2-letter language code, e.g. "en")', :input_html => { value: @project.lang&.join(', ') || '' } %>
      </div>
      <div class="form-group">
        <%= f.input :storage_mode, collection: Project.storage_modes, include_blank: false, selected: @project.read_attribute_before_type_cast(:storage_mode), hint: 'Where to store tweets. In any case tweets will be stored on S3. If project is public it should include Elasticsearch (es).' %>
      </div>
      <div class="form-group">
        <%= f.input :image_storage_mode, collection: Project.image_storage_modes, include_blank: false, selected: @project.read_attribute_before_type_cast(:image_storage_mode), hint: 'Download images (includes video thumbnails, gifs) to S3. Active: Download everything. Avoid possibly sensitive: Do not download if tweet was flagged as sensitive.' %>
      </div>
      <div class="form-group">
        <%= toggle_switch(@project.covid, 'Substream from the Twitter COVID-19 stream', 'project', 'covid', hint: "If true, will filter this stream from the Twitter COVID-19 lab endpoint") %>
      </div>
      <div class="form-group">
        <%= toggle_switch(@project.compile_trending_tweets, 'Compile trending tweets', 'project', 'compile_trending_tweets', hint: "If true, will gather a list of recent popular/relevant tweets for this project") %>
      </div>
      <div class="form-group">
        <%= toggle_switch(@project.compile_trending_topics, 'Compile trending topics', 'project', 'compile_trending_topics', hint: "If true, will gather a list of recent popular/relevant topics for this project") %>
      </div>
      <div class="form-group">
        <%= toggle_switch(@project.active_stream, 'Active stream', 'project', 'active_stream', hint: "Activate stream (if false, won't stream data for this project)") %>
      </div>
      <div class="form-group">
        <%= toggle_switch(@project.compile_data_dump_ids, 'Compile dump of Ids', 'project', 'compile_data_dump_ids', hint: 'Compile daily S3 data dump with tweet IDs.') %>
      </div>
    </div>
  </div>

  <div class="mb-5">
    <h4>Annotation mode</h4>
    <div class="form-group">
      <%= f.input :annotation_mode, collection: Project.annotation_modes, include_blank: false, selected: @project.read_attribute_before_type_cast(:annotation_mode), hint: "Annotation mode for the public interface (doesn't concern mturk or local mode). Annotation mode stream: Only works well when a stream of tweets are being collected (see streaming options). In this case, a recently collected tweet is fetched from a queue (queue is implemented in crowdbreaks-streamer). In local mode (not be confused with local batch processing) tweets are fetched from the public_tweets table.", input_html: {id: 'select-annotation-mode'} %>
    </div>
    <div id="options-annotation-mode-local" >
      <div class="form-group">
        <%= f.input 'Upload tweet IDs',
          hint: 'Please use a header-less CSV in which each row corresponds to a tweet ID. You can specify a second column for the text. In that case the text instead of the entire tweet will be shown to turkers.',
          label_html: {class: 'label-no-wrap'} do %>
        <div class="btn btn-secondary" onClick="document.getElementById('job-file-local').click();">
          <%= fa_icon 'upload', class: 'mr-2' %>
          <span>Choose file</span>
        </div>
      <% end %>
      <div class='hidden-file-upload'>
        <%= f.input :job_file, as: :file, input_html: {id: 'job-file-local', class: 'input-file'} %>
      </div>
      <%= f.error :job_file %>
      <% if @project.public_tweets.count > 0 %>
        <div class="alert alert-danger">Note: Existing entries in public tweets table will be deleted if they don't have results associated with it.</div>
      <% end %>
      </div>
    </div>
  </div>

  <div class="mb-5">
    <h4>Accessibility options</h4>
    <div class="form-group">
      <%= toggle_switch(@project.public, 'Make public', 'project', 'public', hint: 'List project under /projects publicly, else project is private') %>
    </div>
    <div class="form-group">
      <%= f.input :accessible_by_email_pattern, as: :string, hint: 'Restrict access to users with an account registered with a certain email pattern. Leave empty for no restriction. The project can be set to private with "\w@\w" as the pattern, which will allow access to all registered users without showing the project under /projects. Seperate multiple regex patterns by commas: E.g. "\w@epfl\.ch, \w@ethz\.ch, other@user.com"', :input_html => { value: @project.accessible_by_email_pattern&.join(', ') || '' } %>
    </div>
    <div class="form-group">
      <%= f.input :locales, label: "Locales", hint: "List of locales (any of [#{Crowdbreaks::Locales.join(', ')}]) for which this project should be publicly displayed (under /projects)", :input_html => { value: @project.locales&.join(', ') || '' } %>
    </div>
  </div>

  <!-- hidden fields -->
  <%= f.input :primary, as: :hidden, :input_html => {value: true} %>

  <div class="form-actions" class="mt-2">
    <%= f.button :submit, class: 'btn btn-primary btn-lg' %>
  </div>
<% end %>
